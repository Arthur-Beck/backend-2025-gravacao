Table users {
  id integer [primary key, increment]
  username text [note: 'Nome completo do usuário']
  email text [not null, unique]
  password text [default: '123456']
  telefone varchar
  role varchar [default: 'user', note: 'user = comum, parcial, admin']
  tipo_usuario varchar [note: 'cliente, entregador, admin']
  photo text [note: 'link da foto do perfil']
  cpf varchar
  data_nascimento date
  status varchar [note: 'ativo, inativo, bloqueado']
  preferencias_contato varchar
  created_at timestamp [default: 'CURRENT_TIMESTAMP']
  updated_at timestamp

  indexes {
    (email, password) [name: 'login']
    (username) [name: 'name']
    (email) [unique, name: 'unique_email']
  }
}

Table login {
  id integer [primary key, increment]
  email varchar
  senha varchar
  usuario_id integer [ref: > users.id]
}

Table cadastro {
  id integer [primary key, increment]
  nome_completo varchar
  email varchar
  senha varchar
  telefone varchar
  data_nascimento date
  cpf varchar
  foto_perfil varchar
  preferencias_contato varchar
}

Table historico_pedidos {
  id integer [primary key, increment]
  usuario_id integer [ref: > users.id]
  itens text [note: 'descrição dos produtos/cestas/combos']
  valor_total decimal
  status varchar [note: 'pendente, em andamento, entregue, cancelado']
  data_pedido datetime
  forma_pagamento varchar
  entregador_id integer [ref: > users.id, note: 'usuário do tipo entregador']
}

Table payments {
  id integer [primary key, increment]
  user_id integer [not null, ref: > users.id, note: 'Quem realizou o pagamento']
  user_control integer [note: 'Usuário que criou o registro']
  tipo_pagamento varchar
  valor_pago decimal
  value real [note: 'valor alternativo de pagamento (duplicado de valor_pago)']
  receipt text [note: 'comprovante']
  obs text
  paymentdate timestamp
  status_pagamento varchar
  verified boolean [default: false, note: 'verificado']
  photo text [note: 'link para foto do comprovante']
  data_pagamento datetime
  created_at timestamp [default: 'CURRENT_TIMESTAMP']
  updated_at timestamp

  indexes {
    (paymentdate) [name: 'all payment of date']
    (value) [name: 'range of value']
    (paymentdate, value) [name: 'all payment between date and value']
  }
}

Ref login_usuario: login.usuario_id > users.id
Ref pedido_usuario: historico_pedidos.usuario_id > users.id
Ref pedido_entregador: historico_pedidos.entregador_id > users.id
Ref pagamento_usuario: payments.user_id > users.id
